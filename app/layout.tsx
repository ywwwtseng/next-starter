import './globals.css';
import { cookies } from 'next/headers';
import { SWR_CACHE_KEY } from '@/constants/swr';
import { ClientStore, IClientStore } from '@/stores/ClientStore';
import { Providers } from './providers';

export const metadata = {
  title: 'Next Starter',
  description: 'Generated by create next app',
}

async function fetchRequiredData(client: IClientStore) {
  if (!client.token || !client.userService) {
    return [];
  }

  

  try {
    const [me, user1, user2] = await Promise.all([
      client.userService.fetchMeProfile(),
      client.userService.fetchUserById(1),
      client.userService.fetchUserById(2),
    ]);

    return[
      [SWR_CACHE_KEY.ME, me],
      [[SWR_CACHE_KEY.USERS, 1], user1],
      [[SWR_CACHE_KEY.USERS, 2], user2],
    ];
  } catch (error) {
    return [];
  }
}


export default async function RootLayout({
  children,
}: {
  children: React.ReactNode,
}) {
  const cookieStore = cookies();
  const token: string | undefined = cookieStore.get('token')?.value;
  const client = new ClientStore({ token });
  const data = await fetchRequiredData(client);

  const initialState = { client: client.getState(), swrFallback: data };

  return (
    <html lang="en">
      <body>
        <Providers initialState={initialState}>
          {children}
        </Providers>
      </body>
    </html>
  )
}
